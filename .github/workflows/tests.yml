name: Proxyserver Build

on:
  push:
    branches: [ main , master ]
  pull_request:
    branches: [ main , master ]

jobs:
  test-linux:
    name: Test Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libgtk-3-dev libayatana-appindicator3-dev libwebkit2gtk-4.0-dev
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      # Run a build but don't do anything with the artifacts.
      # i.e., don't sign them or anything.
      # This is just to check that a build would run correctly for release.
      - name: Build Proxyserver
        run: |
          go get -d -v
          ./build.sh linux server
          ./build.sh linux desktop
      - name: Test Proxyserver
        run: |
          go get -d -v
          go test ./libproxy
  build-darwin:
    name: Test Darwin Build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      # Run a build but don't do anything with the artifacts.
      # i.e., don't sign them or anything.
      # This is just to check that a build would run correctly for release.
      - name: Build Proxyserver
        run: |
          go get -d -v
          ./build.sh darwin server
          ./build.sh darwin desktop
      - name: Test Proxyserver
        run: |
          go get -d -v
          go test ./libproxy
  build-windows:
    name: Test Windows Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      # Run a build but don't do anything with the artifacts.
      # i.e., don't sign them or anything.
      # This is just to check that a build would run correctly for release.
      - name: Build Proxyserver
        run: |
          go get -d -v
          ./build.sh windows server
          ./build.sh windows desktop
      - name: Test Proxyserver
        run: |
          go get -d -v
          go test ./libproxy
